# coding: utf-8

"""
    Mail-in-a-Box

    Mail-in-a-Box API HTTP specification.  # Introduction This API is documented in [**OpenAPI format**](http://spec.openapis.org/oas/v3.0.3). ([View the full HTTP specification](https://raw.githubusercontent.com/mail-in-a-box/mailinabox/api-spec/api/mailinabox.yml).)  All endpoints are relative to `https://{host}/admin` and are secured with [`Basic Access` authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). If you have multi-factor authentication enabled, authentication with a `user:password` combination will fail unless a valid OTP is supplied via the `x-auth-token` header. Authentication via a `user:user_key` pair is possible without the header being present.   # noqa: E501

    The version of the OpenAPI document: 0.51.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import mailinabox_api
from mailinabox_api.api.dns_api import DNSApi  # noqa: E501
from mailinabox_api.rest import ApiException


class TestDNSApi(unittest.TestCase):
    """DNSApi unit test stubs"""

    def setUp(self):
        self.api = mailinabox_api.api.dns_api.DNSApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_dns_custom_a_record(self):
        """Test case for add_dns_custom_a_record

        Add DNS custom A record  # noqa: E501
        """
        pass

    def test_add_dns_custom_record(self):
        """Test case for add_dns_custom_record

        Add DNS custom record  # noqa: E501
        """
        pass

    def test_add_dns_secondary_nameserver(self):
        """Test case for add_dns_secondary_nameserver

        Add DNS secondary nameserver  # noqa: E501
        """
        pass

    def test_get_dns_custom_a_records_for_q_name(self):
        """Test case for get_dns_custom_a_records_for_q_name

        Get DNS custom A records  # noqa: E501
        """
        pass

    def test_get_dns_custom_records(self):
        """Test case for get_dns_custom_records

        Get DNS custom records  # noqa: E501
        """
        pass

    def test_get_dns_custom_records_for_q_name_and_type(self):
        """Test case for get_dns_custom_records_for_q_name_and_type

        Get DNS custom records  # noqa: E501
        """
        pass

    def test_get_dns_dump(self):
        """Test case for get_dns_dump

        Get DNS dump  # noqa: E501
        """
        pass

    def test_get_dns_secondary_nameserver(self):
        """Test case for get_dns_secondary_nameserver

        Get DNS secondary nameserver  # noqa: E501
        """
        pass

    def test_get_dns_zonefile(self):
        """Test case for get_dns_zonefile

        Get DNS zonefile  # noqa: E501
        """
        pass

    def test_get_dns_zones(self):
        """Test case for get_dns_zones

        Get DNS zones  # noqa: E501
        """
        pass

    def test_remove_dns_custom_a_record(self):
        """Test case for remove_dns_custom_a_record

        Remove DNS custom A record  # noqa: E501
        """
        pass

    def test_remove_dns_custom_record(self):
        """Test case for remove_dns_custom_record

        Remove DNS custom record  # noqa: E501
        """
        pass

    def test_update_dns(self):
        """Test case for update_dns

        Update DNS  # noqa: E501
        """
        pass

    def test_update_dns_custom_a_record(self):
        """Test case for update_dns_custom_a_record

        Update DNS custom A record  # noqa: E501
        """
        pass

    def test_update_dns_custom_record(self):
        """Test case for update_dns_custom_record

        Update DNS custom record  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
